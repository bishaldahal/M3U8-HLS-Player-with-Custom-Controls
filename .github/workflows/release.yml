name: Release

on:
  push:
    tags:
      - "*"

jobs:
  release:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          ref: 'master'

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "20"

      - name: Install 7z
        run: sudo apt-get install p7zip-full

      - name: Install dependencies
        run: npm ci

      - name: Minify and zip
        run: |
          npm run minify
          npm run zip
          echo "ZIP_FILE1=$(ls build  | grep .zip)" >> $GITHUB_ENV

      - name: Create Release
        id: create_release
        uses: actions/create-release@main
        env:
          GITHUB_TOKEN: ${{ secrets.PERSONAL_ACCESS_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: Release ${{ github.ref }}
          draft: false
          prerelease: false

      - name: List build directory
        run: ls -la ./build

      - name: Upload Release from master
        id: upload-release-asset1
        uses: actions/upload-release-asset@main
        env:
          GITHUB_TOKEN: ${{ secrets.PERSONAL_ACCESS_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./build/${{ env.ZIP_FILE1 }}
          asset_name: ${{ env.ZIP_FILE1 }}
          asset_content_type: application/zip

      - name: Checkout firefox branch
        uses: actions/checkout@v4
        with:
          ref: 'firefox'

      - name: Install dependencies for firefox branch
        run: npm ci

      - name: Minify and zip for firefox branch
        run: |
          npm run minify
          npm run zip
          echo "ZIP_FILE2=$(ls build  | grep .zip)" >> $GITHUB_ENV

      - name: List build directory
        run: ls -la ./build

      - name: Upload Release from firefox
        id: upload-release-asset2
        uses: actions/upload-release-asset@main
        env:
          GITHUB_TOKEN: ${{ secrets.PERSONAL_ACCESS_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./build/${{ env.ZIP_FILE2 }}
          asset_name: ${{ env.ZIP_FILE2 }}
          asset_content_type: application/zip